{"version":3,"sources":["routes/navigation.js","pages/login.js","components/navBar.js","components/userDetails.js","components/addTaskModal.js","components/task.js","components/dropDown.js","api/fetch.js","pages/homepage.js","pages/container.js","routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["navigateToPage","history","path","push","initialState","username","password","Login","useState","user","setUsernamePassword","rememberMe","setRememberMe","useHistory","handleuserUpdate","e","targetValue","currentTarget","updatedValue","value","name","handleFormSubmit","a","localStorage","setItem","JSON","stringify","alert","style","alignItems","display","flexDirection","type","placeholder","onChange","checked","onClick","navBarList","index","HomeNavBar","currentTab","setCurrentTab","Navbar","width","background","paddingLeft","paddingRight","map","item","padding","backgroundColor","color","UserDetails","userPassword","logout","isPasswordChanging","setPasswordStatus","setPassword","handlePasswordButtonPress","AddTask","closeModal","addItem","completedStatus","setCompleted","taskName","setTaskName","handleCompletedRadio","paddingTop","id","for","TaskSection","taskList","deleteItem","showAddModal","setAddModal","title","completed","justifyContent","paddingBottom","textAlign","String","Modal","show","dropdownList","description","DropDownSection","selectedOption","setSelectedOption","showDropDownModal","setDropDownModalStatus","optionName","margin","handleOptionChange","fetchData","response","fetch","then","res","json","result","slice","error","catch","HomePage","userData","setUserData","toDoList","setTodoList","listLength","setListLength","checkLoginStatus","getItem","firstTime","hasUserLoggedIn","parse","firstTimeUserData","handleLogout","setTimeout","getTodoList","responseFromAPI","length","useEffect","clear","deletedIndex","updatedList","filter","deleteFromList","data","addedItem","newTask","userId","addToList","renderTab","Container","setUserLogin","to","Routes","basename","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d47471ca.chunk.js","sourcesContent":["\nexport const navigateToPage = (history, path) => history.push(\"/\" + path);\n// method used to navigate between pages history + path sent from parent page where its used","import { useState, useEffect } from \"react\";\nimport { navigateToPage } from \"../routes/navigation\";\nimport { useHistory, Redirect } from \"react-router-dom\";\n\nconst initialState = {\n  username: \"\",\n  password: \"\",\n};\n\nfunction Login() {\n  const [user, setUsernamePassword] = useState(initialState);\n  const [rememberMe, setRememberMe] = useState(false);\n  const history = useHistory();\n\n  // her we capture HTML dom event and update the state accordingly.\n  // NOTE: we have kept username and password in the same object to avoid over coding of same nature\n  // e.currentTarget returns the \"name\" tag that we have passed to input field below\n  const handleuserUpdate = (e) => {\n    let targetValue = e.currentTarget;\n    let updatedValue = targetValue.value;\n    if (targetValue.name === \"username\") {\n      setUsernamePassword({ ...user, username: updatedValue });\n    } else {\n      setUsernamePassword({ ...user, password: updatedValue });\n    }\n  };\n\n  // handling submit button\n  // saving data in local only if user selects remember me\n  //  we save a flag \"loggedinfirsttime\" and \"firsttimeuserdata\" for the home page to function independant of user selecing remember me\n  const handleFormSubmit = async () => {\n    if (user.username && user.password) {\n      if (rememberMe) {\n        await localStorage.setItem(\"username\", user.username);\n        await localStorage.setItem(\"password\", user.password);\n      }\n      await localStorage.setItem(\"loggedInFirstTime\", true);\n      await localStorage.setItem(\"firstTimeUserData\", JSON.stringify(user));\n      navigateToPage(history, \"home\");\n    } else {\n      alert(\"Please enter your login credentials\");\n    }\n  };\n\n  return (\n    <>\n      <div \n        style={{\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n         \n          \n        }}\n      >\n        <label>\n          <b>Username</b>\n        </label>\n        <input\n          type=\"text\"\n         \n          placeholder=\"Enter Username\"\n          name={\"username\"}\n          onChange={handleuserUpdate}\n        />\n        <label>\n          <b>Password</b>\n        </label>\n        <input\n          type=\"password\"\n         \n          placeholder=\"Enter Password\"\n          name={\"password\"}\n          onChange={handleuserUpdate}\n        />\n        <label>\n          <input\n            type=\"checkbox\"\n            name=\"rememberMe\"\n            checked={rememberMe}\n            onChange={() => setRememberMe(!rememberMe)}\n          />\n          Remember me\n        </label>\n        <button  onClick={() => handleFormSubmit()}>Submit</button>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n","import { Navbar, Button, Nav } from \"react-bootstrap\";\nconst navBarList = [\n  { index: 0, name: \"Home\" },\n  { index: 1, name: \"Tasks\" },\n  { index: 2, name: \"User\" },\n];\nfunction HomeNavBar({ currentTab, setCurrentTab }) {\n  // currentTab (variable), setCurrentTab (method) passed as props from parent (homepage)\n  return (\n    <>\n      <Navbar\n        style={{\n          width: \"100%\",\n          alignItems: \"center\",\n          background: \"gray\",\n          display: \"flex\",\n          flexDirection: \"row\",\n        }}\n      >\n        <div style={{ paddingLeft: 25, paddingRight: 25 }}>LOGO</div>\n        <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n          {navBarList.map((item, index) => (\n            <div\n              style={{\n                width: \"25%\",\n                padding: 25,\n                backgroundColor: currentTab === index ? \"black\" : \"gray\",\n              }}\n              onClick={() => setCurrentTab(index)}\n            >\n              <label\n                style={{\n                  color: currentTab === index ? \"white\" : \"black\",\n                }}\n              >\n                {item.name}\n              </label>\n            </div>\n          ))}\n        </div>\n      </Navbar>\n    </>\n  );\n}\n\nexport default HomeNavBar;\n","import { useState } from \"react\";\n\nfunction UserDetails({ username, userPassword, logout }) {\n  const [isPasswordChanging, setPasswordStatus] = useState(false);\n  const [password, setPassword] = useState(userPassword);\n\n  const handlePasswordUpdate = (e) => {\n    let targetValue = e.currentTarget.value;\n    setPassword(targetValue);\n  };\n\n  const handlePasswordButtonPress = async () => {\n      if (isPasswordChanging) {\n        await localStorage.setItem(\"password\", password);\n        setPasswordStatus(false)\n      }\n      else{\n        setPasswordStatus(true)\n      }\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <label>Username : {username}</label>\n        {/* conditional handling of text input/display password state */}\n        <label>\n          Password :{\" \"}\n          {isPasswordChanging ? (\n            <input\n              type=\"password\"\n              placeholder=\"Enter Password\"\n              name={\"password\"}\n              onChange={handlePasswordUpdate}\n            />\n          ) : (\n            password ? password: userPassword\n          )}\n        </label>\n        <button onClick={() => handlePasswordButtonPress()}>\n          {isPasswordChanging ? \"Save Password\" : \"Change Password\"}\n        </button>\n        <button onClick={() => logout()}>Logout</button>\n      </div>\n    </>\n  );\n}\n\nexport default UserDetails;\n","import { useState } from \"react\";\n\nfunction AddTask({ closeModal, addItem }) {\n  const [completedStatus, setCompleted] = useState(null);\n  const [taskName, setTaskName] = useState(\"\");\n  \n  const handleCompletedRadio = (e) => {\n    let targetValue = e.currentTarget.value;\n    if (targetValue === \"true\") {\n      setCompleted(true);\n    } else {\n      setCompleted(false);\n    }\n  };\n\n  const handleTaskNameUpdate = (e) => {\n    let targetValue = e.currentTarget.value;\n    setTaskName(targetValue);\n  };\n\n  const handleSaveTask = () => {\n    if (completedStatus === null || taskName === \"\") {\n      alert(\"Please fill in the details to add the task\");\n    } else {\n      addItem({ completedStatus, taskName });\n    }\n    closeModal()\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          paddingTop: 50,\n        }}\n      >\n        <label>\n          <b>Task Name</b>\n        </label>\n        <input\n          type=\"text\"\n          placeholder=\"Enter task name\"\n          name={\"taskName\"}\n          onChange={handleTaskNameUpdate}\n        />\n        <label>\n          <b>Is Task Completed?</b>\n        </label>\n        <input\n          type=\"radio\"\n          id=\"true\"\n          name=\"taskCompleted\"\n          value=\"true\"\n          onChange={handleCompletedRadio}\n        />\n        <label for=\"true\">True</label>\n        <input\n          type=\"radio\"\n          id=\"false\"\n          name=\"taskCompleted\"\n          value=\"false\"\n          onChange={handleCompletedRadio}\n        />\n        <label for=\"false\">False</label>\n      </div>\n      <button onClick={() => handleSaveTask()}>Save Task</button>\n      <button onClick={() => closeModal()}>Close Modal</button>\n    </>\n  );\n}\n\nexport default AddTask;\n","import { useState } from \"react\";\nimport AddTask from \"./addTaskModal\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction TaskSection({ taskList, deleteItem,addItem }) {\n  const [showAddModal, setAddModal] = useState(false);\n  const renderList = () => {\n    return (\n      <>\n        {taskList.map((item, index) => {\n          const { id, title, completed } = item;\n          return (\n            <div\n              style={{\n                alignItems: \"center\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n                width: \"150%\",\n                paddingBottom: 20,\n              }}\n            >\n              <label\n                style={{\n                  width: \"5%\",\n                }}\n              >\n                {id}\n              </label>\n              <label\n                style={{\n                  width: \"90%\",\n                  textAlign: \"left\",\n                }}\n              >\n                {title}\n              </label>\n              <label\n                style={{\n                  width: \"10%\",\n                  textAlign: \"left\",\n                }}\n              >\n                {String(completed)}\n              </label>\n              <button onClick={() => deleteItem(index)}>Delete</button>\n            </div>\n          );\n        })}\n        <button onClick={() => setAddModal(true)}>Add Task</button>\n      </>\n    );\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          paddingTop: 50,\n        }}\n      >\n        {taskList ? renderList() : \"Error! Please try again later\"}\n        <Modal show={showAddModal} >\n          <AddTask closeModal={() => setAddModal(false)} addItem={addItem}/>\n        </Modal>\n      </div>\n    </>\n  );\n}\n\nexport default TaskSection;\n","import { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nconst dropdownList = [\n  { title: \"Option 1\", description: \"Option 1 is selected\" },\n  { title: \"Option 2\", description: \"You selected Option 2\" },\n  { title: \"Option 3\", description: \"Option 3 has been selected\" },\n];\nconst description =\n  \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\";\nfunction DropDownSection() {\n  const [selectedOption, setSelectedOption] = useState(0);\n  const [showDropDownModal, setDropDownModalStatus] = useState(false);\n\n  let optionName = \"\";\n  switch (selectedOption) {\n    case 0:\n      optionName = \"Option 1\";\n      break;\n    case 1:\n      optionName = \"Option 2\";\n      break;\n    case 2:\n      optionName = \"Option 3\";\n      break;\n    default:\n      break;\n  }\n\n  const handleOptionChange = (index) => {\n    setSelectedOption(index);\n    setDropDownModalStatus(false);\n  };\n\n  return (\n    <>\n      <button\n        style={{ margin: 50 }}\n        onClick={() => setDropDownModalStatus(true)}\n      >\n        {showDropDownModal ? \"Select Option\" : optionName} v\n      </button>\n      <Modal show={showDropDownModal}>\n        {dropdownList.map((item, index) => {\n          const { title } = item;\n          return (\n            <div\n              style={{\n                padding: 10,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                display: \"flex\",\n              }}\n            >\n              <button onClick={() => handleOptionChange(index)}>{title}</button>\n            </div>\n          );\n        })}\n      </Modal>\n      {!showDropDownModal && (\n        <>\n          <label>{description}</label>\n          {dropdownList.map((item, index) => {\n            const { description } = item;\n            return selectedOption === index ? (\n              <div\n                style={{\n                  padding: 10,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  display: \"flex\",\n                }}\n              >\n                <h4>{description}</h4>\n              </div>\n            ) : null;\n          })}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default DropDownSection;\n","const URL = \"http://jsonplaceholder.typicode.com/todos\";\n// using default fetch method provided by React\nexport const fetchData = async () => {\n  let response = null;\n  await fetch(URL)\n    .then((res) => res.json())\n    .then((result) => {\n      result = result.slice(0, 10);\n      response = { result, error: false };\n      // result is reduced to first 10 elements\n      // an object is created and passed back to parent page\n    })\n    .catch((error) => {\n      response = { result: null, error: true };\n    });\n    return response;\n};\n","import { useHistory } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { navigateToPage } from \"../routes/navigation\";\nimport { HomeNavBar, UserDetails, TaskSection, DropDownSection } from \"../components/index\";\nimport { fetchData } from \"../api/fetch\";\n\nconst initialState = {\n  username: \"\",\n  password: \"\",\n};\n\nfunction HomePage() {\n  const [currentTab, setCurrentTab] = useState(0);\n  // currenttab is used to handle which page to display\n  const [userData, setUserData] = useState(initialState);\n  // userdata -> username, password from local storage\n  const [toDoList, setTodoList] = useState(null);\n  // list data from the api call\n  const [listLength, setListLength] = useState(0);\n  // length saved to append index for newer elements added\n  // NOTE: most state based management is done from homepage.js and passed onto the children pages\n\n  const history = useHistory();\n\n  const checkLoginStatus = async () => {\n    const user = await localStorage.getItem(\"username\");\n    const password = await localStorage.getItem(\"password\");\n    // we save user details for tab 3/ userdetails component\n    let firstTime = await localStorage.getItem(\"loggedInFirstTime\");\n    firstTime = firstTime === \"true\" ? true : false;\n    const hasUserLoggedIn = user ? true : false;\n\n    // when user has logged in for the first time without selecting remember me\n    if (firstTime && !hasUserLoggedIn) {\n      const firstTimeUserData = await JSON.parse(\n        localStorage.getItem(\"firstTimeUserData\")\n      );\n      setUserData(firstTimeUserData);\n    } else {\n      setUserData({ username: user, password });\n    }\n\n    // if data not present in local storage we logout the user\n    if (!hasUserLoggedIn && !firstTime) {\n      handleLogout();\n    }\n\n    // set status as first time login to null for future logins\n    setTimeout(() => {\n      localStorage.setItem(\"loggedInFirstTime\", null);\n    }, 1000);\n  };\n\n  // method for API call\n  const getTodoList = async () => {\n    const responseFromAPI = await fetchData();\n    // we have defined method fetchData in fetch.js\n    if (responseFromAPI && responseFromAPI.result) {\n      // we check if the api call was successfull or not\n      // if successfull we save in state which is later passed to child component (task section)\n      setTodoList(responseFromAPI.result);\n      setListLength(responseFromAPI.result.length + 1);\n    }\n  };\n\n  const deleteFromList = (deletedIndex) => {\n    let updatedList = toDoList.filter((item, index) => deletedIndex !== index);\n    // filtering out the deleted element and updating list\n    setTodoList(updatedList);\n  };\n\n  const addToList = (addedItem) => {\n    const { completedStatus, taskName } = addedItem;\n    const newTask = {\n      userId: 1,\n      id: listLength,\n      title: taskName,\n      completed: completedStatus,\n    };\n    // creating object similar to original array from API and adding to the list in state\n    toDoList.push(newTask);\n    setListLength(listLength + 1);\n    setTodoList(toDoList);\n  };\n\n  // component did mount to check login status and api call\n  useEffect(() => {\n    checkLoginStatus();\n    getTodoList();\n  }, []);\n\n  const handleLogout = () => {\n    localStorage.clear();\n    navigateToPage(history, \"login\");\n  };\n\n  // switch case to handle which page to display depending upon selection on navbar\n  const renderTab = () => {\n    switch (currentTab) {\n      case 0:\n        return <DropDownSection/>;\n      case 1:\n        return (\n          <TaskSection\n            taskList={toDoList}\n            deleteItem={(index) => deleteFromList(index)}\n            addItem={(data) => addToList(data)}\n          />\n        );\n      case 2:\n        return (\n          <UserDetails\n            username={userData.username}\n            userPassword={userData.password}\n            logout={() => handleLogout()}\n          />\n        );\n      default:\n        break;\n    }\n  };\n  return (\n    <>\n      <div\n        style={{\n          alignItems: \"center\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <HomeNavBar\n          currentTab={currentTab}\n          setCurrentTab={(index) => setCurrentTab(index)}\n        />\n        {renderTab()}\n      </div>\n    </>\n  );\n}\n\nexport default HomePage;\n","import { useState, useEffect } from \"react\";\nimport {  Redirect } from \"react-router-dom\";\n\nfunction Container() {\n  const [hasUserLoggedIn, setUserLogin] = useState(false);\n\n  const checkLoginStatus = () => {\n    const user = localStorage.getItem(\"username\");\n    setUserLogin(user ? true : false);\n  };\n\n  // useeffect is used as Componentdidmount, we check if user data is available in local storage or not\n  useEffect(() => {\n    checkLoginStatus();\n  }, []);\n\n  // if data present in localstorage we redirect to home page else login page\n  return hasUserLoggedIn ? <Redirect to=\"/home\" /> : <Redirect to=\"/login\" />;\n}\n\nexport default Container;\n","import { BrowserRouter as Router,HashRouter, Switch, Route, Link } from \"react-router-dom\";\nimport Login from \"../pages/login\";\nimport HomePage from \"../pages/homepage\";\nimport Container from \"../pages/container\";\n\n// defining pages\n// container page is used to distinguish between logged in/logged out user\nexport default function Routes() {\n    return (\n      <HashRouter basename=\"/\"> \n        <div>\n          <Switch>\n            <Route path=\"/home\">\n              \n              <HomePage />\n            </Route>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/\">\n              <Container />\n            </Route>\n          </Switch>\n        </div>\n        </HashRouter>\n    );\n  }","import Routes from \"./routes/routes\";\n\nfunction App() {\n  // One central router component for routes\n  return <Routes />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}